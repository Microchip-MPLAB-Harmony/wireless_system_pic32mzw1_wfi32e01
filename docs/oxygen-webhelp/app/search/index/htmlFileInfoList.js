define(function () {
return ["GUID-00292779-019D-4DAF-B38F-317F529F725A.html@@@1.1.3.19 SYS_APPDEBUG_INFO_PRINT@@@#define SYS_APPDEBUG_INFO_PRINT (obj, flow, fmt, ...) SYS_APPDEBUG_PRINT(obj, flow, APP_LOG_INFO_LVL, __FUNCTION__, __LINE__, fmt, ##__VA_ARGS__) Used for logging Info Level Logs This macro function...","GUID-007A2A1C-CCE4-44C0-A735-2591D764708D.html@@@1.3.3.16 SYS_NET_CTRL_MSG Enum@@@typedef enum { // NET Socket should reconnect to Peer, the User is expected to pass pointer to SYS_NET_Config for the configuration of the new Connection. SYS_NET_CTRL_MSG_RECONNECT = 0 , // NET...","GUID-010BB62D-452D-4B87-9F43-FDA5BF80F6AF.html@@@1.3.3 Net System Service Interface@@@Name Description SYS_NET_INTF_WIFI Net Socket Intf - Wifi SYS_NET_INTF_ETHERNET Net Socket Intf - Ethernet SYS_NET_MODE_CLIENT Net Socket Mode - Client SYS_NET_MODE_SERVER Net Socket Mode - Server...","GUID-01230F94-41B8-4AF4-A81B-FFE243BAB213.html@@@1.2.3.9 SYS_MQTT_Config Struct@@@typedef struct { //MQTT Broker Configuration SYS_MQTT_BrokerConfig sBrokerConfig; //Number of Topis Subscribed to (0-SYS_MQTT_MAX_TOPICS) uint8_t subscribeCount; //Config for all the Topics Subscribed...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-04628A3C-69FB-458A-B6A7-9CE08A6C26EB.html@@@1.7.3.11 SYS_WSS_STATE Enum@@@typedef enum { SYS_WSS_STATE_CLOSED= 0 , //Connection closed, the initial state of the service SYS_WSS_STATE_CLOSING, //Handles the processing of the client closing handshake SYS_WSS_STATE_CONNECTING...","GUID-055E1A74-7370-4E9A-BDC6-FE5CA1547D14.html@@@1.7.3.7 SYS_WSS_SHA1_DIGEST_SIZE Macro@@@#define SYS_WSS_SHA1_DIGEST_SIZE 20 The predefined sha digest size None...","GUID-067B7E35-0233-4030-BDC7-ADA3C5A65281.html@@@1.7.3.3 SYS_WSS_CLIENT_KEY_SIZE_DECODED Macro@@@#define SYS_WSS_CLIENT_KEY_SIZE_DECODED 16 The size of the decoded client key defined by the RFC 6455 None...","GUID-0785F012-1F1A-4AA4-9167-58736B812C00.html@@@1.2.3.21 SYS_MQTT_Task Function@@@void SYS_MQTT_Task (SYS_MODULE_OBJ obj) Executes the MQTT Service State Machine This function ensures that the MQTT service is able to execute its state machine to process any messages and invoke the...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-097A4209-8474-480E-A141-6C8FC60A7671.html@@@1.7 Web Socket Server (WSS) System Service@@@Web Socket Server System Service Library provides an application programming interface (API) for implementing a Web Socket Server functionalities as defined in rfc6455. The WSS System Service uses the...","GUID-0B54E267-5E7C-4408-BB57-0BB6E61B59D3.html@@@1.6.3.8 SYS_OTA_Initialize Function@@@SYS_OTA_Initialize( void ) Initializes the System OTA module. This function is used for initializing the data structures of the OTA service. OTA service supports only one instance of client. None None...","GUID-0B818BAA-AF92-41F7-B4C1-7516ADA6F4A5.html@@@1.2.1 MQTT System Service Usage@@@The MQTT System Service provides simple APIs to enable MQTT Client Connectivity to a configured MQTT Broker. The User need not take care of intermediate states of a MQTT Connection, as the Service...","GUID-0F240AEF-6B53-4CD2-A8FD-1D16BA00B43E.html@@@1.7.3.10 SYS_WSS_EVENTS Enum@@@typedef enum { SYS_WSS_EVENT_ERR= 0 , //Reports any error condition //SYS_WSS_EVENT_UP, SYS_WSS_EVENT_CLIENT_CONNECTING, //Reports the connection request from the client...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-10DC0C0A-E5D5-417A-86E0-199C0ECC0B50.html@@@1.6.3.10 SYS_OTA_Tasks Function@@@void SYS_OTA_Tasks ( void ) Maintains the OTA System tasks and functionalities. This function is used to run the various tasks and functionalities of OTA system service. The SYS_OTA_Initialize...","GUID-114BB7C8-BE5C-46B0-84F4-6A459FC0A9A7.html@@@MQTT System Service Developer&apos;s Guide@@@The purpose of this document is to explain the MQTT system service design to enable the developer to make changes in the service code as per his/ her requirements if the need be. MQTT system service...","GUID-11C5C134-0D1A-4812-9D5A-4F355264839C.html@@@1.1.3.15 SYS_APPDEBUG_DBG_PRINT@@@#define SYS_APPDEBUG_DBG_PRINT (obj, flow, fmt, ...) SYS_APPDEBUG_PRINT(obj, flow, APP_LOG_DBG_LVL, __FUNCTION__, __LINE__, fmt, ##__VA_ARGS__) Used for logging Debug Level Logs This macro function is...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-13A901DD-DEC5-4002-95DF-E87651A5FE82.html@@@1.2.3.8 SYS_MQTT_PublishTopicCfg Struct@@@typedef struct { //Qos (0/ 1/ 2) uint8_t qos; //Retain (0/1) - Message needs to be retained by the Broker till every subscriber receives it uint8_t retain; //Topic on which to Publish the message char...","GUID-13E248BF-5C3E-4B90-A116-D708A72ECF13.html@@@1.2.3.1 SYS_MQTT_DEFAULT_NET_INTF Macro@@@#define SYS_MQTT_DEFAULT_NET_INTF 0 Default Value for network interface - 0 (Wifi). None...","GUID-16745EB6-5053-46F3-A8B2-3A1EEEB70BCA.html@@@1.3.3.25 SYS_NET_Close Function@@@void SYS_NET_Close ( SYS_MODULE_OBJ object ) Deinitializes the specific instance of the NET System service This function deinitializes the specific module instance disabling its operation. Resets all...","GUID-172B28B0-8A47-4C93-8023-8886A08BCD06.html@@@1.1 App Debug System Service@@@App Debug System Service Library provides an application programming interface (API) to manage debug logs at runtime. Key Features: Supports Enabling/ Disabling of logs at runtime Supports Enabling/...","GUID-17C14258-CDD3-4FBE-B2D5-528666AB0D33.html@@@1.4.3.14 SYS_WIFI_Deinitialize Function@@@SYS_WIFI_RESULT SYS_WIFI_Deinitialize (SYS_MODULE_OBJ object) Deinitializes the module instance of the system Wi-Fi service This function deinitializes the module instance disabling its operation...","GUID-17FAEA79-D63F-4222-B015-DF863DD4AFA6.html@@@1.7.3.14 SYS_WSS_HANDSHAKE_CTXT Struct@@@typedef struct { uint16_t http_version; //HTTP version specified in the client handshake uint8_t ws_version; //Web socket version specified in the client handshake bool upgradeWebSocket; //If upgrade...","GUID-1802D445-0432-4C05-83C5-8DF39FCC41DF.html@@@1.4.3.9 SYS_WIFI_STA_CONFIG Struct@@@typedef struct { /* Wi-Fi station mode SSID */ uint8_t ssid[ 33 ]; /* Wi-Fi station mode passphrase */ uint8_t psk[ 64 ]; /* Wi-Fi station mode authentication type */ SYS_WIFI_AUTH authType; /* Wi-Fi...","GUID-1910387B-8C3A-4408-9D3D-7ABDC2A90E99.html@@@1.3.3.23 SYS_NET_SetConfigParam Function@@@int32_t SYS_NET_SetConfigParam (SYS_MODULE_OBJ obj, uint32_t paramType, void *data) Returns success on setting a configuration parameter for Net System Service. This function is currently used for...","GUID-1FC1E3CD-9E78-4C97-ADD7-B04DBE255FC2.html@@@1.2.3.19 SYS_MQTT_Subscribe Function@@@int32_t SYS_MQTT_Subscribe (SYS_MODULE_OBJ obj, SYS_MQTT_SubscribeConfig *subConfig); Returns success/ failure for the subscribing to a Topic by the user. This function is used for subscribing to a...","GUID-20880B8D-6815-43DC-BCC6-8C29E1C1AE5A.html@@@1.3.3.27 SYS_NET_GetStatus Function@@@SYS_NET_STATUS SYS_NET_GetStatus ( SYS_MODULE_OBJ object ) Returns System NET instance status. This function returns the current status of the System NET instance. SYS_NET_Open should have been called...","GUID-21594EF4-8CE1-4BFA-B2C3-CA15EF80D761.html@@@1.3.3.11 SYS_NET_MODE_SERVER Macro@@@#define SYS_NET_MODE_SERVER 1 // Server Mode Value Net Socket Mode - Server None...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-226069A1-E832-4560-8457-6363E3A0EB83.html@@@1.2.2 MQTT System Service Configuration@@@The MQTT System Service library should be configured through the MHC. When user selects the MQTT System Service library, all the required dependencies components are added automatically in the MHC...","GUID-244208E3-3A35-4EA4-8A25-08FB3A0C34F1.html@@@1.5.3.12 SYS_WIFIPROV_GetStatus Function@@@uint8_t SYS_WIFIPROV_GetStatus ( SYS_MODULE_OBJ object) Returns System Wi-Fi Provisioning service status. This function returns the current status of the System Wi-Fi Provisioning service. The...","GUID-26537238-7459-436C-88BF-A506A0EC46B0.html@@@1.3.3.15 SYS_NET_RESULT Enum@@@typedef enum { // Success SYS_NET_SUCCESS = 0 , // Failure SYS_NET_FAILURE = - 1 , // Sys NET Service Down SYS_NET_SERVICE_DOWN = - 2 , // Enough space not available in the transmit buffer to send the...","GUID-270923F2-A3D7-4B68-A399-AEAAFC7C0F64.html@@@1.1.3.14 SYS_APPDEBUG_Open Function@@@SYS_MODULE_OBJ SYS_APPDEBUG_Open (SYS_APPDEBUG_CONFIG *cfg) Open an instance of the System App Debug service. This function initializes the instance of the System App Debug Service. cfg...","GUID-28A59856-E897-40FA-B089-39C8C84D27CD.html@@@1.2.3.12 SYS_MQTT_CALLBACK Function@@@int32_t SYS_MQTT_CALLBACK (SYS_MQTT_EVENT_TYPE eEventType, void *data, uint16_t len, void * cookie); Pointer to a MQTT system service callback function. This data type defines a pointer to a Mqtt...","GUID-28B1581E-648F-4F92-B376-19B1A46D81C3.html@@@1.7.3.24 SYS_WSS_Task Function@@@void SYS_WSS_Task (SYS_MODULE_OBJ obj) Executes the SYS NET service and handles the WSS service timer processing. SYS_WSS_Initialize() should have been called before calling this function Application...","GUID-2A33E6A9-B6CC-42BC-AD7D-EDE218C1AD45.html@@@1.3.3.26 SYS_NET_CtrlMsg Function@@@int32_t SYS_NET_CtrlMsg (SYS_MODULE_OBJ obj, SYS_NET_CTRL_MSG msg_type, void *data, uint16_t len) Returns success/ failure for the disconnect/ reconnect operation asked by the user. This function is...","GUID-2B3ABECA-845C-4A2C-90DA-6BB38A0424F6.html@@@1.5.3.14 SYS_WIFIPROV_Tasks Function@@@uint8_t SYS_WIFIPROV_Tasks ( SYS_MODULE_OBJ object) Maintains the Wi-Fi Provisioning System tasks and functionalities. This function is used to run the various tasks and functionalities of Wi-Fi...","GUID-2BE63079-2FCD-4C89-9C2D-1ED1A506A66B.html@@@1.4.3.5 SYS_WIFI_SCAN_MODES Enum@@@typedef enum { /* Requesting Passive Scan Mode */ SYS_WIFI_SCAN_MODE_PASSIVE = 0 , /* Requesting Active Scan Mode */ SYS_WIFI_SCAN_MODE_ACTIVE } SYS_WIFI_SCAN_MODES ; Identifies the Wi-Fi scanning...","GUID-2C74519E-9B7A-45F9-B042-119754809978.html@@@1.3.3.21 SYS_NET_Initialize Function@@@int32_t SYS_NET_Initialize () Returns success/ failure for initialization of data structures of the NET service This function is used for initializing the data structures of the NET service and is...","GUID-2D68F47B-8E2E-4F12-B126-AB828481897D.html@@@1.3.3.13 NET_CFG Macro@@@#define NET_CFG 0x1 // App Debug Print Flows - CFG AppDebug Flow for the Logs - Configuration None...","GUID-2F0FEF24-2562-4783-A816-2E0B65C679D5.html@@@1.5.3.3 SYS_WIFIPROV_MODE Enum@@@typedef enum { /* Requesting a operating mode as a station */ SYS_WIFIPROV_STA = 0 , /* Requesting a operating mode as a access point. */ SYS_WIFIPROV_AP = 1 } SYS_WIFIPROV_MODE ; Identifies the Wi-Fi...","GUID-30A62A7C-8781-4779-A4F3-F1D5BC265D51.html@@@1.3.3.17 SYS_NET_STATUS Enum@@@typedef enum { // Net Instance is Idle/ Not in Use SYS_NET_STATUS_IDLE = 0 , // Lower Layer is Down SYS_NET_STATUS_LOWER_LAYER_DOWN, // Resolving DNS of NET Server for the Client to connect...","GUID-31BDD8EE-0AB5-4542-BB67-A14746424248.html@@@1.2.3.14 SYS_MQTT_Initialize Function@@@int32_t SYS_MQTT_Initialize () Returns success/ failure for initialization of data structures of the MQTT service This function is used for initializing the data structures of the MQTT service and is...","GUID-31D8837E-9521-4C37-820E-BC817E1A525D.html@@@1.2.3.10 SYS_MQTT_SubscribeConfig Struct@@@typedef struct { uint8_t entryValid; //Qos (0/ 1/ 2) uint8_t qos; //Name of the Topic Subscribing to char topicName[SYS_MQTT_TOPIC_NAME_MAX_LEN]; } SYS_MQTT_SubscribeConfig; Used for passing on the...","GUID-3299B9CD-1B7F-47FD-95CD-636CC3BFFED6.html@@@1.1.3.18 SYS_APPDEBUG_FN_EXIT_PRINT@@@#define SYS_APPDEBUG_FN_EXIT_PRINT (obj, flow) SYS_APPDEBUG_PRINT_FN_EXIT(obj, flow, __FUNCTION__, __LINE__) Used for logging Function Exit Logs This macro function is used for logging function exit...","GUID-335E6EC1-1976-4BDE-BC58-99C64AA570D2.html@@@1.3.3.30 SYS_NET_Task Function@@@void SYS_NET_Task (SYS_MODULE_OBJ obj) Executes the SYS NET service state machine for the instance This function ensures that the Net system service is able to execute its state machine to process any...","GUID-3410AB90-8C90-4B2A-9A36-081663B2F794.html@@@1.4.3.10 SYS_WIFI_SCAN_CONFIG Struct@@@typedef struct { /* Wi-Fi station mode SSID */ uint8_t ssid[ 33 ]; /* Wi-Fi station mode passphrase */ uint8_t psk[ 64 ]; /* Wi-Fi station mode authentication type */ SYS_WIFI_AUTH authType; /* Wi-Fi...","GUID-34AA46D6-A6BB-459C-95C5-4D4C733D21AC.html@@@1.3.3.6 SYS_NET_IP_PROT_TCP Macro@@@#define SYS_NET_IP_PROT_TCP 1 // TCP - Ip Protocol Value Ip Protocol Mode - TCP None...","GUID-35EAAD3C-3DC0-4AC0-8ECD-BD900AD22695.html@@@1.1.2 App Debug System Service Configuration@@@The enabling/ disabling of App Debug System Service library should be done through the MHC. More on how any component can integrate this library into his own component can be found by going through...","GUID-3684FF88-AC4A-45AB-8857-49E1C46FDC61.html@@@1.4.3.4 SYS_WIFI_RESULT Enum@@@typedef enum { /* Operation completed with success */ SYS_WIFI_SUCCESS = 0 , /* Operation Failed.*/ SYS_WIFI_FAILURE, /* Wi-Fi service un-initialize */ SYS_WIFI_SERVICE_UNINITIALIZE, /*Wi-Fi...","GUID-383BAEE1-60DF-434C-B279-0E380732F844.html@@@Web Socket System Service Developer&apos;s Guide@@@The purpose of this document is to explain the Web Socket system service design to enable the developer to make changes in the service code as per his/ her requirements if the need be. The WSS service...","GUID-38AED8C2-2FA2-4438-961E-79C3E153D01A.html@@@1.1.3.8 SYS_APPDEBUG_RESULT Enum@@@typedef enum { SYS_APPDEBUG_SUCCESS = 0 , // Success SYS_APPDEBUG_FAILURE = - 1 , // Failure } SYS_APPDEBUG_RESULT; Identifies the return values for the Sys App Debug APIs. None...","GUID-39F92DDD-F7E2-45D1-B015-BF0B3A9FD6BD.html@@@1.1.3.1 APP_LOG_DBG_LVL Macro@@@#define APP_LOG_DBG_LVL 0x2 App Debug Service Debug Log Level None...","GUID-3E5312EC-F437-4001-870C-D02566138DE5.html@@@1.2.3.4 SYS_MQTT_EVENT_TYPE Enum@@@typedef enum { //Message received on a topic subscribed to SYS_MQTT_EVENT_MSG_RCVD = 0 , //MQTT Client for Disconnected SYS_MQTT_EVENT_MSG_DISCONNECTED, //MQTT Client Connected...","GUID-3F1BB7CA-C728-4096-9386-35EC426BDD9F.html@@@1.7.1 Web Socket System Service Usage@@@Web Socket System Service Library provides an application programming interface (API) for implementing a Web Socket functionalities. The user need not take care about the connection handshakes,the...","GUID-3F684EBE-A5FB-4AE3-A0A8-629D54D9300B.html@@@1.5.3.1 SYS_WIFIPROV_CTRLMSG Enum@@@typedef enum { /* Requesting a Wi-Fi Configuration set(for connect) */ SYS_WIFIPROV_SETCONFIG = 0 , /* Requesting a Wi-Fi configuration get */ SYS_WIFIPROV_GETCONFIG, /* Updating Wi-Fi Connect status...","GUID-41A54E26-7261-45CA-AF4A-A0175CBE303E.html@@@1.4.3.1 SYS_WIFI_STATUS Enum@@@typedef enum { /* Wi-Fi system service is in init status */ SYS_WIFI_STATUS_INIT = 1 , /* Wi-Fi system service is in driver open status */ SYS_WIFI_STATUS_WDRV_OPEN_REQ, /* Wi-Fi system service is in...","GUID-44230E49-6079-4901-9D7C-F71412C3B9EA.html@@@1.6.2 OTA System Service Configuration@@@The OTA System Service library should be configured through the MHC ( MHC configuration is initial configuration, some of parameters can be changed runtime using respective APIs - follow OTA System...","GUID-445B119E-3EAD-4ECB-8662-27AB3B193F52.html@@@1.5.3.6 SYS_WIFIPROV_CONFIG Struct@@@typedef struct { /* Operating mode of device */ SYS_WIFIPROV_MODE mode; /* Flag to identify if configuration needs to be saved in NVM. 0 - Do not save configuration in NVM. 1 - Save configuration in...","GUID-4756B92F-E53F-41CB-BA7F-2FDC1FBC85AC.html@@@1.2.3.11 SYS_MQTT_BrokerConfig Struct@@@typedef struct { //to know which of the Configurations are valid SYS_MQTT_Vendor_Type eVendorType; // MQTT Broker/ Server Name char brokerName[SYS_MQTT_MAX_BROKER_NAME_LEN]; // MQTT Server Port...","GUID-4913BE25-06C5-4ED7-9352-DA99287424F7.html@@@Wi-Fi provisioning System Service Usage@@@The Wi-Fi Provisioning System Service povides below methods to configuring desired Wi-Fi SSID and related security credentials of the Home AP into the device. MHC configuration menu for Command...","GUID-4A1F8FC6-6463-48BF-97C9-7BDFDCF686A6.html@@@1.1.3.13 SYS_APPDEBUG_Initialize Function@@@int32_t SYS_APPDEBUG_Initialize () Returns success/ failure for initialization of data structures of the App Debug service This function is used for initializing the data structures of the App Debug...","GUID-4B38DADA-4E4A-4820-B0C5-6F4E3A99D44F.html@@@1.2.3.15 SYS_MQTT_Connect Function@@@SYS_MODULE_OBJSYS_MODULE_OBJ* SYS_MQTT_Connect(SYS_MQTT_Config *cfg, SYS_MQTT_CALLBACK fn MqttFn, void *cookie); Connects to the configured MQTT Broker. This function opens a new instance and connects...","GUID-4D8F8775-405D-4FE4-B72E-9807B7005C89.html@@@1.5.3.5 SYS_WIFIPROV_AUTH Enum@@@typedef enum { /* Requesting a Open Authentication types */ SYS_WIFIPROV_OPEN = 1 , /* Requesting a WEP Authentication types */ SYS_WIFIPROV_WEP, /* Requesting a WPA/WPA2(Mixed) Authentication types...","GUID-4E47C21A-9803-41C3-853C-04FDAD30A075.html@@@1.1.3.10 SYS_APPDEBUG_CtrlMsg Function@@@int32_t SYS_APPDEBUG_CtrlMsg (SYS_MODULE_OBJ obj, SYS_APPDEBUG_CtrlMsgType eCtrlMsgType, void *data, uint16_t len) Returns success/ failure for the flow/ level set operation asked by the user. This...","GUID-50083FB4-76EC-41B8-ADC6-A4466DE3972C.html@@@1.2.3.7 SYS_MQTT_PublishConfig Struct@@@typedef struct { //Qos (0/ 1/ 2) uint8_t qos; //Retain (0/1) - Message needs to be retained by the Broker till every subscriber receives it uint8_t retain; //Message to be Published uint8_t...","GUID-53743705-6039-46B7-8052-7FB8438940F2.html@@@1.1.3.16 SYS_APPDEBUG_ERR_PRINT@@@#define SYS_APPDEBUG_ERR_PRINT (obj, flow, fmt, ...) SYS_APPDEBUG_PRINT(obj, flow, APP_LOG_ERROR_LVL, __FUNCTION__, __LINE__, fmt, ##__VA_ARGS__) Used for logging Error Level Logs This macro function...","GUID-560DA0FB-8CF0-4EAB-A5D4-7641AE5FFBF3.html@@@1.3.3.7 SYS_NET_MAX_HOSTNAME_LEN Macro@@@#define SYS_NET_MAX_HOSTNAME_LEN 256 // Max Host Name Length Max Host Name Length None...","GUID-578A7A2F-0FFE-463F-A241-3190441F74E0.html@@@1.1.3 App Debug System Service Interface@@@Name Description APP_LOG_LVL_DISABLE App Debug Service Logging Disabled APP_LOG_ERROR_LVL App Debug Service Error Log Level APP_LOG_DBG_LVL App Debug Service Debug Log Level APP_LOG_INFO_LVL App Debug...","GUID-57E25DE7-ED25-4DE8-9A44-C0BF175E752D.html@@@1.1.3.4 APP_LOG_INFO_LVL Macro@@@#define APP_LOG_INFO_LVL 0x4 App Debug Service Info Log Level None...","GUID-5905E9EC-4C85-42AD-AC7C-90E41923D709.html@@@1.4.3.3 SYS_WIFI_CTRLMSG Enum@@@typedef enum { /* Control message type for requesting a Wi-Fi Configuration set(for connect) */ SYS_WIFI_CONNECT = 0 , /*Control message type for requesting a Wi-Fi device disconnect */...","GUID-5F93A938-03E8-4F80-BD6A-0BBC4B0D44F0.html@@@Net System Service Developer&apos;s Guide@@@The purpose of this document is to explain the NET system service design to enable the developer to make changes in the service code as per his/ her requirements if the need be. NET system service...","GUID-61F4CED4-8E5E-421C-881E-A6BEAE2B392F.html@@@1.4.3.17 SYS_WIFI_Tasks Function@@@uint8_t SYS_WIFI_Tasks ( SYS_MODULE_OBJ object) Maintains the Wi-Fi System tasks and functionalities. This function is used to run the various tasks and functionalities of Wi-Fi system service. The...","GUID-6226C2BC-B29A-4FFD-BE21-B9B3EF06B446.html@@@1.7.3.23 SYS_WSS_CloseConnection Function@@@SYS_WSS_RESULT SYS_WSS_CloseConnection (SYS_WSS_STATUS_CODE code, uint8_t *data, size_t dataLen, int32_t clientIndex) Closes the Web Socket connection to the client indicated by the parameter...","GUID-6528061F-6F04-4A18-85C3-8B7839B8E235.html@@@1.4.3.16 SYS_WIFI_Initialize Function@@@SYS_MODULE_OBJ SYS_WIFI_Initialize ( SYS_WIFI_CONFIG *config, SYS_WIFI_CALLBACK callback, void *cookie ) Initializes the System Wi-Fi module. Wi-Fi service supports only one single instance of Wi-Fi...","GUID-653E183F-71C9-4BD2-9698-4D4BB2A2992A.html@@@1 MPLAB\u00AE Harmony 3 PIC32MZW1/WFI32 wireless system services@@@MPLAB\u00AE Harmony 3 is an extension of the MPLAB\u00AE ecosystem for creating embedded firmware solutions for Microchip 32-bit SAM and PIC\u00AE microcontroller and microprocessor devices. Refer to the following...","GUID-65C429E8-E63B-4FF1-8939-C80E558E0F29.html@@@1.4.3.12 SYS_WIFI_CALLBACK Typedef@@@typedef void (*SYS_WIFI_CALLBACK )(uint32_t event, void * data, void *cookie ); Pointer to a Wi-Fi system service callback function. This data type defines a pointer to a Wi-Fi service callback...","GUID-68AB743B-D2CB-4548-86FD-10BB3E1C3FA6.html@@@1.1.3.3 APP_LOG_FN_EE_LVL Macro@@@#define APP_LOG_FN_EE_LVL 0x8 App Debug Service Service Entry/ Exit Log Level None...","GUID-69ABE7A5-0098-4C34-B9AA-72DDB247C7F5.html@@@1.2.3.20 SYS_MQTT_Unsubscribe Function@@@int32_t SYS_MQTT_Unsubscribe (SYS_MODULE_OBJ obj, char *subTopic); Returns success/ failure for the unsubscribing to a Topic by the user. This function is used for Unsubscribing from a Topic...","GUID-6B52ABB2-B67F-4DC8-9147-43E43664223B.html@@@1.6.3.5 SYS_OTA_Config Struct@@@typedef struct { /*Auto reset is enabled or not*/ uint8_t autoreset; /*OTA periodic check is enabled or not*/ bool ota_periodic_check; /*OTA auto update is enabled or not*/ bool ota_auto_update...","GUID-6C1BB28E-7F9B-4582-8E74-E301F89C58AC.html@@@1.5 Wi-Fi provisioning System Service@@@Wi-Fi Provisioning System Service Library is used to enable Wi-Fi provisioning method. Wi-Fi Provisioning is the process of configuring desired Wi-Fi SSID and related security credentials of the Home...","GUID-6D0974F9-BDE5-4905-BC62-CFA6733A675A.html@@@1.3.3.19 SYS_NET_CALLBACK Typedef@@@typedef void (*SYS_NET_CALLBACK)(uint32_t event, void *data, void * cookie)...","GUID-6D4A7590-A5FE-418D-8A39-4F13DF7618BD.html@@@1.2 MQTT System Service@@@MQTT System Service Library provides an application programming interface (API) to manage MQTT functionalities. The MQTT System Service internally uses the third party Paho MQTT software for MQTT...","GUID-6EA44F54-91D8-42F6-A226-793CA7D06695.html@@@1.4 Wi-Fi System Service@@@Wi-Fi System Service Library provides an application programming interface (API) through which user can request Wi-Fi connectivity functionalities.The Wi-Fi System Service use Wi-Fi driver APIs. Key...","GUID-6FAB8216-E82D-4B1B-899B-55CC9B16302A.html@@@1.5.3.10 SYS_WIFIPROV_CtrlMsg Function@@@SYS_WIFIPROV_RESULT SYS_WIFIPROV_CtrlMsg (SYS_MODULE_OBJ object,uint32_t event, void *buffer,uint32_t length ) Request Wi-Fi Provisioning system service control request interface This function is used...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-77D07DB9-DDA3-416C-B107-9B5789336162.html@@@1.3.3.18 SYS_NET_Config Struct@@@typedef struct { // Net Socket Mode to Open - SYS_NET_MODE_CLIENT(0)/ SYS_NET_MODE_SERVER(1) uint8_t mode; // WiFi or Eth Interface to be used for Opening the socket uint8_t intf; // Net Server Port...","GUID-791A8D39-45C6-4D33-A082-C308E48A6D7B.html@@@1.5.3.7 SYS_WIFIPROV_AP_CONFIG Struct@@@typedef struct { /* Wi-Fi access point mode SSID */ uint8_t ssid[ 32 ]; /* Wi-Fi access point mode passphrase */ uint8_t psk[ 64 ]; /* Wi-Fi access point mode authentication type */ SYS_WIFIPROV_AUTH...","GUID-793F497B-BD41-400B-9FB5-0C0ECBB2B1D5.html@@@1.6.3.7 SYS_OTA_CALLBACK Typedef@@@typedef void (*SYS_OTA_CALLBACK)(uint32_t event, void * data, void *cookie)...","GUID-79B1C1D0-37E8-464B-82BE-41A226C2AB59.html@@@1.7.3.16 SYS_WSS_CONFIG Struct@@@typedef struct { unsigned int port; //port used by the WSS service. bool isTLSEnabled; //TLS enabled? } SYS_WSS_CONFIG; Used for the providing the port and secure connection information during WSS...","GUID-7A668B78-45FE-4EDF-965E-1900422374CE.html@@@1.7.3.2 SYS_WSS_CLIENT_KEY_SIZE Macro@@@#define SYS_WSS_CLIENT_KEY_SIZE 50 Array size for holding the client key None...","GUID-7ADBD426-1396-4DF4-842A-EAD15395A69C.html@@@1.3.2 Net System Service Usage@@@The NET System Service provides simple APIs to enable Server or Client Connectivity for either TCP or UDP. The User need not take care of intermediate states of a TCPIP Connection, as the Service...","GUID-7B12B319-188D-4C1D-8AEE-349BE7660528.html@@@1.6.3.4 SYS_OTA_STATUS Enum@@@typedef enum { /* To provide status of OTA system */ /*system in idle state*/ SYS_OTA_IDLE = 0 , /*waiting for network connection*/ SYS_OTA_WAITING_FOR_NETWORK_CONNECTION, /*waiting for OTA core to...","GUID-7C9FB838-46C2-4CA1-A573-B110ED225368.html@@@1.5.2 Wi-Fi provisioning System Service Configuration@@@The Wi-Fi Provisioning System Service library should be configured through MHC(MPLAB Harmony Configurator). The following figure shows the MHC configuration window for configuring the Wi-Fi...","GUID-7DC907EC-3CE8-45F2-A78B-6AACDAEF6F52.html@@@1.7.3.9 SYS_WSS_RESULT Enum@@@typedef enum { SYS_WSS_SUCCESS = 0 , //successful execution SYS_WSS_FAILURE = 1 , //Failure in execution SYS_WSS_ERROR_INVALID_REQUEST, //Failure in validation of the client handshake...","GUID-7E595932-B68F-4074-BA7D-36D836AA8B5B.html@@@1.6.3.3 SYS_OTA_CTRLMSG Enum@@@typedef enum { /* Control message type for registering a ota system service client callback */ SYS_OTA_REGCALLBACK = 0 , /* Control message type for checking OTA update availability */...","GUID-7EA384CB-36B6-4064-AC58-CC582F611968.html@@@1.3.3.10 SYS_NET_MODE_CLIENT Macro@@@#define SYS_NET_MODE_CLIENT 0 // Client Mode Value Net Socket Mode - Client None...","GUID-7F7011DC-6F77-4DD6-B161-5E2599C28705.html@@@GUID 7F7011DC 6F77 4DD6 B161 5E2599C28705@@@Support of secure OTA using WolfSSL and Trustflex. Support of secure websocket server. Support of low Power Wi-Fi connected sleep modes(WSM and WDS). Support of Wi-Fi Enterprise mode. In Secure OTA...","GUID-7FEA46C8-788C-4E6A-B46E-5A8FEE9B7CED.html@@@1.5.3.2 SYS_WIFIPROV_RESULT Enum@@@typedef enum { /* Operation completed with success */ SYS_WIFIPROV_SUCCESS = 0 , /* Operation failed. */ SYS_WIFIPROV_FAILURE, /* Operation request object is invalid */ SYS_WIFIPROV_OBJ_INVALID= 255...","GUID-818A720C-1FD4-4EA4-B22C-F44B52F11DB5.html@@@1.7.3.1 SYS_WSS_GUID Macro@@@#define SYS_WSS_GUID &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot; The unique ID for generating the sever acceptance key defined by the RFC 6455 WebSocket GUID as per Section 1.3 of RFC 6455...","GUID-81C737BC-9E73-407C-ACAC-5B6795B77394.html@@@1.4.1 Wi-Fi System Service Usage@@@The Wi-Fi System Service library provides an abstraction to the Wi-Fi driver API&apos;s to provide following functionalities. Simple APIs to enable/disable STA mode Simple APIs to enable/disable AP mode...","GUID-8305E5FB-D8B6-4824-AD2A-EFA4BF0DCDCD.html@@@1.7.3.5 SYS_WSS_KA_TIMER_PERIOD Macro@@@#define SYS_WSS_KA_TIMER_PERIOD 100 Set to 100 This parameter will decide the accuracy of the client time out...","GUID-846D93A7-8E39-4AB6-AF2F-99A20D770DB9.html@@@1.7.3.21 SYS_WSS_register_callback Function@@@SYS_WSS_RESULT SYS_WSS_register_callback (SYS_WSS_CALLBACK userCallback, void * cookie) API for registering the application callback function with the WSS service. Callback functions may be registered...","GUID-86C7B809-3344-4813-95FE-24B5894EEC7C.html@@@1.4.3.13 SYS_WIFI_CtrlMsg Function@@@SYS_WIFI_RESULT SYS_WIFI_CtrlMsg ( SYS_MODULE_OBJ object, uint32_t event, void *buffer, uint32_t length ) Returns success/ failure for the connect/disconnect/scan operation asked by client. This...","GUID-87D2FD77-3A00-47BA-9CCD-8FB708F03EA4.html@@@1.3.3.8 SYS_NET_IP_PROT_UDP Macro@@@#define SYS_NET_IP_PROT_UDP 0 // UDP - Ip Protocol Value Ip Protocol Mode - UDP None...","GUID-897565A1-B722-4A0C-AE94-7C04BDEBEA4F.html@@@1.7.3.19 SYS_WSS_Deinitialize Function@@@void SYS_WSS_Deinitialize () When invoked the API will de-initialize the WSS service. This function is used for de-initializing the data structures and state machine of the WSS service. This function...","GUID-8A2DC2AD-7D43-4568-9CA7-325A8F1C64CA.html@@@1.7.3.13 SYS_WSS_STATUS_CODE Enum@@@typedef enum { SYS_WSS_STATUS_CODE_NORMAL_CLOSURE = 1000 , SYS_WSS_STATUS_CODE_GOING_AWAY = 1001 , SYS_WSS_STATUS_CODE_PROTOCOL_ERROR = 1002 , SYS_WSS_STATUS_CODE_UNSUPPORTED_DATA = 1003...","GUID-8C49DDF2-665A-4AE3-A68A-BBAE2C0A22DD.html@@@1.2.3.5 SYS_MQTT_RESULT Enum@@@typedef enum { // Success SYS_MQTT_SUCCESS = 0 , // Failure SYS_MQTT_FAILURE = - 1 , // Sys NET Service Down SYS_MQTT_SERVICE_DOWN = - 2 , // Sys NET Available Put Buffer not enough for xmitting the...","GUID-8C607133-0A31-4E3D-BDCC-A6CF5E5950B9.html@@@1.7.3.20 SYS_WSS_PingClient Function@@@SYS_WSS_RESULT SYS_WSS_PingClient ( uint8_t *data, size_t dataLen, int32_t clientIndex) Sends a ping message to the client indicated by the parameter clientIndex. This API sends a ping message to the...","GUID-8F2A596D-F14C-43E8-8D8C-951C45191D23.html@@@1.6.3.9 SYS_OTA_CtrlMsg Function@@@SYS_OTA_RESULT SYS_OTA_CtrlMsg (uint32_t event, void *buffer, uint32_t length); Returns success/ failure for the update check/ota trigger/system reset operations asked by client. This function is used...","GUID-9015FCED-F411-41BE-B7DE-6929204283F6.html@@@1.5.3.13 SYS_WIFIPROV_Initialize Function@@@SYS_MODULE_OBJ SYS_WIFIPROV_Initialize ( SYS_WIFIPROV_CONFIG *config, SYS_WIFIPROV_CALLBACK callback, void *cookie ) Initializes the System Wi-Fi Provisioning module. Wi-Fi Provisioning service...","GUID-91BC6347-08EF-4EE7-ADDE-90524E70867A.html@@@1.7.3.12 SYS_WSS_FRAME Enum@@@typedef enum { SYS_WSS_FRAME_CONTINUATION = 0x00 , //Continuation frame - Data frame with opcode 0 SYS_WSS_FRAME_TEXT = 0x01 , //Text data frame - Data frame with opcode 1 SYS_WSS_FRAME_BINARY = 0x02...","GUID-95DB52B3-F70E-435B-96C6-96BB819004F7.html@@@1.3.3.20 SYS_NET_CALLBACK Function@@@void SYS_NET_CALLBACK (uint32_t event, void *data, void * cookie) Pointer to a Net system service callback function. This data type defines a pointer to a Net service callback function, thus defining...","GUID-988925A4-8993-491F-A8E9-8B7131FC0286.html@@@1.1.3.11 SYS_APPDEBUG_Close Function@@@void SYS_APPDEBUG_Close ( SYS_MODULE_OBJ object ) Close the specific module instance of the SYS App Debug service This function clsoes the specific module instance disabling its operation. Resets all...","GUID-98A20067-8DD0-4FF2-846A-9EB8D1758ECE.html@@@1.1.3.17 SYS_APPDEBUG_FN_ENTER_PRINT@@@#define SYS_APPDEBUG_FN_ENTER_PRINT (obj, flow) SYS_APPDEBUG_PRINT_FN_ENTER(obj, flow, __FUNCTION__, __LINE__) Used for logging Function Entry Logs This macro function is used for logging function...","GUID-9B0C8D64-9CC9-41EB-A114-321B1DECE901.html@@@1.3.3.24 SYS_NET_Open Function@@@SYS_MODULE_OBJ SYS_NET_Open (SYS_NET_Config *cfg, SYS_NET_CALLBACK Net_cb, void *cookie) Opens a new NET System Service instance. This function opens the instance of the NET System Service. cfg...","GUID-9B772857-AD63-4637-BA65-C70530584A1E.html@@@1.1.3.6 SYS_APPDEBUG_MAX_NUM_OF_USERS Macro@@@#define SYS_APPDEBUG_MAX_NUM_OF_USERS 8 Number of instances of App Debug Service supported None...","GUID-9DCBB817-ECC8-46C6-954B-F6B0D8F5C0BC.html@@@1.7.3 Web Socket Server System Service Interface@@@Name Description SYS_WSS_KA_TIMER_PERIOD Decides the accuracy of the client timeout SYS_WSS_CLIENT_KEY_SIZE Array size for holding the client key SYS_WSS_CLIENT_KEY_SIZE_DECODED Decoded client key...","GUID-9F1A7B19-413E-4254-8E08-E61C7A180E8F.html@@@1.7.3.18 SYS_WSS_Initialize Function@@@SYS_MODULE_OBJ SYS_WSS_Initialize () Returns SYS_MODULE_OBJ after the successful initialization of data structures of the WSS service. This function is used for initializing the data structures of the...","GUID-9F5B3013-33E1-4917-920A-F0F8FD1D704E.html@@@1.3.3.1 SYS_NET_DEFAULT_AUTO_RECONNECT Macro@@@#define SYS_NET_DEFAULT_AUTO_RECONNECT 1 // Auto Reconnect Enabled by default Default Values for Auto Reconnect - True None...","GUID-A20F7777-F80F-4FC9-BC45-F39030A65105.html@@@1.1.3.2 APP_LOG_ERROR_LVL Macro@@@#define APP_LOG_ERROR_LVL 0x1 App Debug Service Error Log Level None...","GUID-A3BBC2D0-94C5-4D00-8A54-558B7F27500F.html@@@1.5.3.11 SYS_WIFIPROV_Deinitialize Function@@@SYS_WIFIPROV_RESULT SYS_WIFIPROV_Deinitialize (SYS_MODULE_OBJ object) Deinitializes the module instance of the SYS WIFIPROV module This function deinitializes the module instance disabling its...","GUID-A4D437CC-705D-469F-BBD6-8BF8C1B8E9FD.html@@@1.1.1 App Debug System Service Usage@@@The App Debug System Service provides simple APIs to enable/ disable logs at runtime based on the log levels and flow. More on how any component using this library can enabling/ disable logs at...","GUID-AF87F0BB-E319-4436-A302-357BFA7E193E.html@@@1.6 Over The Air (OTA) firmware update System Service@@@OTA System Service Library provides an application programming interface (API) to manage OTA functionalities. The OTA System Service uses the Wi-Fi service, Net service, NetPres APIs for achieving...","GUID-AFAB4E7D-CACF-4851-B9F6-B963450DB193.html@@@1.3.3.2 SYS_NET_DEFAULT_NET_INTF Macro@@@#define SYS_NET_DEFAULT_NET_INTF SYS_NET_INTF_WIFI // Interface 0 by default Default Values for Interface - 0 (Wifi) None...","GUID-B0D9910C-94B2-4947-AC80-5CE869E553BB.html@@@1.7.3.22 SYS_WSS_sendMessage Function@@@SYS_WSS_RESULT SYS_WSS_sendMessage (bool fin, SYS_WSS_FRAME type, uint8_t *data, size_t dataLen, int32_t clientIndex) Sends a message to the client indicated by the parameter clientIndex. This API...","GUID-B0DCC36D-84BA-4AF0-8048-81D0E773F6BA.html@@@1.2.3.17 SYS_MQTT_GetStatus Function@@@SYS_MQTT_STATUS SYS_MQTT_GetStatus ( SYS_MODULE_OBJ object ) Returns System MQTT instance status. This function returns the current status of the System MQTT instance. SYS_MQTT_Connect should have...","GUID-B12643ED-A0B9-4331-9E81-961355411485.html@@@1.7.3.4 SYS_WSS_HTTP_VERSION_1_1 Macro@@@#define SYS_WSS_HTTP_VERSION_1_1 0x0101 Supported HTTP versions None...","GUID-B2F4E27B-9331-4E16-9395-7B630DF98CC0.html@@@1.2.3.3 SYS_MQTT_INTF_WIFI Macro@@@#define SYS_MQTT_INTF_WIFI SYS_NET_INTF_WIFI // Wifi Intf Value Mqtt Socket Intf - Wifi None...","GUID-B5FCF623-E7FF-4626-AA04-20BCC3916E44.html@@@1.2.3 MQTT System Service Interface@@@Name Description SYS_MQTT_INTF_WIFI Mqtt Socket Intf - Wifi SYS_MQTT_INTF_ETHERNET Mqtt Socket Intf - Ethernet SYS_MQTT_STATUS Identifies the current status of the Sys Mqtt Instance. SYS_MQTT_RESULT...","GUID-B70E454B-E9FB-4214-AC26-354C154592A1.html@@@1.7.3.15 SYS_WSS_RXDATA Struct@@@typedef struct { uint8_t * data; //Pointer to the rx data buffer int64_t datalen; //length of the received data } SYS_WSS_RXDATA; The RX data structure used for sharing the received data and length to...","GUID-B8650787-4731-48E9-B342-55EAFCC5496B.html@@@1.4.3.6 SYS_WIFI_AUTH Enum@@@typedef enum { /* Requesting a Open Authentication types */ SYS_WIFI_OPEN = 1 , /* Requesting a WEP Authentication types */ SYS_WIFI_WEP, /* Requesting a WPA/WPA2(Mixed) Authentication types */...","GUID-B8B066C9-9D43-45BF-B3E4-F0B4D07A496A.html@@@1.2.3.2 SYS_MQTT_INTF_ETHERNET Macro@@@#define SYS_MQTT_INTF_ETHERNET SYS_NET_INTF_ETHERNET // Ethernet Intf Value Mqtt Socket Intf - Ethernet None...","GUID-B8C3059F-624D-4C22-93D5-33243DA6CB4F.html@@@1.3.1 Net System Service Configuration@@@The NET System Service library should be configured through the MHC. When user selects the NET System Service library, all the required dependencies components are added automatically in the MHC...","GUID-B9C73D51-5039-4573-A452-176603C18703.html@@@1.4.3 Wi-Fi System Service Interface@@@Name Description SYS_WIFI_AUTH Identifies the type of Authentication requested. SYS_WIFI_CTRLMSG Identifies the control message for which the client has called SYS_WIFI_MODE Identifies the Wi-Fi...","GUID-B9CCAC68-A8F4-4EDA-85E0-729986577DA6.html@@@1.4.2 Wi-Fi System Service Configuration@@@The Wi-Fi System Service library should be configured through MHC(MPLAB Harmony Configurator). The following figure shows the MHC configuration window for configuring the Wi-Fi System Service and a...","GUID-BA16CF18-DCA0-4AA8-8A17-18EAC7380EF5.html@@@1.4.3.7 SYS_WIFI_AP_CONFIG Struct@@@typedef struct { /* Wi-Fi access point mode SSID */ uint8_t ssid[ 32 ]; /* Wi-Fi access point mode passphrase */ uint8_t psk[ 64 ]; /* Wi-Fi access point mode authentication type */ SYS_WIFI_AUTH...","GUID-BC6FF56F-269A-4570-B96A-76C3D29BF4D9.html@@@1.5.3.4 SYS_WIFIPROV_STATUS Enum@@@typedef enum { /* Wi-Fi Provisioning system service is in MPFS filesystem mount state */ SYS_WIFIPROV_STATUS_MPFS_MOUNT= 1 , /* Wi-Fi Provisioning system service is in NVM read state */...","GUID-BCF00564-E312-4462-A11B-079E6A5414EB.html@@@1.5.3.9 SYS_WIFIPROV_CALLBACK Typedef@@@typedef void (*SYS_WIFIPROV_CALLBACK )(uint32_t event, void * data, void *cookie ); Pointer to a Wi-Fi Provisioning system service callback function. This data type defines a pointer to a Wi-Fi...","GUID-BE00844E-71BA-4BD6-BB06-7FFA362A0833.html@@@1.4.3.11 SYS_WIFI_STA_APP_INFO Struct@@@typedef struct { /* IP Address of the station */ IPV4_ADDR ipAddr; /* MAC Address of the station */ uint8_t macAddr[ 6 ]; } SYS_WIFI_STA_APP_INFO; Information related to connected station shared with...","GUID-BE525C46-F3B6-45A6-AFB0-BB23EFAB4208.html@@@1.3.3.9 SYS_NET_MAX_NUM_OF_SOCKETS Macro@@@#define SYS_NET_MAX_NUM_OF_SOCKETS SYS_NET_SUPP_NUM_OF_SOCKS // umber of Instances Supported by the NET System Service Number of Instances Supported by the NET System Service None...","GUID-BEE2CEA6-760B-4433-B6F9-46FAD85BA076.html@@@1.7.3.6 SYS_WSS_SERVER_KEY_SIZE Macro@@@#define SYS_WSS_SERVER_KEY_SIZE 50 Array size for holding the server key None...","GUID-BFAB8833-E678-457A-9C14-AEC9CA4B05B3.html@@@1.4.3.8 SYS_WIFI_CONFIG Struct@@@typedef struct { /* Operating mode of the device */ SYS_WIFI_MODE mode; /* Flag to identify if configuration needs to be saved in NVM. 0 - Do not save configuration in NVM. 1 - Save configuration in...","GUID-C171D15D-DC5E-4D98-BD34-F95338A640A7.html@@@1.4.4 Wi-Fi System Service Developer&apos;s Guide@@@When user enables the auto connect features using Wi-Fi service system MHC menu, the default auto connect retry count is configured to 5. User can modify the macro MAX_AUTO_CONNECT_RETRY in generated...","GUID-C19B77FE-63FC-469F-A9C0-95D41B59DBE1.html@@@1.2.3.13 SYS_MQTT_Deinitialize Function@@@int32_t SYS_MQTT_Deinitialize () Deinitialization of data structures of the MQTT service This function is used for freeing the allocated data structures for the MQTT service. SYS_MQTT_Deinitialize()...","GUID-C340A70C-DB26-427E-B902-B253B1590DD7.html@@@1.7.3.17 SYS_WSS_CALLBACK Typedef@@@typedef void (*SYS_WSS_CALLBACK)(SYS_WSS_EVENTS event, void *data, int32_t clientIndex, void *cookie)...","GUID-C340E1A4-6E08-4399-8480-E07BA98EDFB2.html@@@1.6.4 OTA System Service Developer&apos;s Guide@@@Over the Air (OTA) firmware upgrade feature is designed with a two step process, Image Downloading and Image Programming process. Image Downloading is processed by the OTA service that is integrated...","GUID-C691B5FA-0B04-4C7F-B71B-B7481D5BB75A.html@@@1.5.4 Wi-Fi provisioning System Service Developer&apos;s Guide@@@When User want to add new provisioning method, user needs to parse the incoming provisioning data and update the information in SYS_WIFI_CONFIG as shown in below code snippet. The Wi-Fi provisioning...","GUID-C7194E88-A1DC-4EFA-8FCE-B3127970E193.html@@@1.4.3.2 SYS_WIFI_MODE Enum@@@typedef enum { /* Requesting a operating mode a AP access point. */ SYS_WIFI_AP = 1 } SYS_WIFI_MODE ; Identifies the Wi-Fi operating mode. Identifies the Wi-Fi operating mode. Client need to manually...","GUID-CBCB9481-CA72-4E90-A4FE-6243DAB9057B.html@@@1.3.3.4 SYS_NET_INTF_ETHERNET Macro@@@#define SYS_NET_INTF_ETHERNET 1 // Ethernet Intf Value Net Socket Intf - Ethernet None...","GUID-CD8600B6-BDA0-4A35-AB3D-BF74C4540A2B.html@@@1.3.3.28 SYS_NET_RecvMsg Function@@@int32_t SYS_NET_RecvMsg (SYS_MODULE_OBJ obj, void *data, uint16_t len) Returns No of Bytes received from peer using the System NET instance. This function returns the number of bytes received from the...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-D2624727-1BC0-4511-BB6C-35D027018A24.html@@@1.3.3.12 NET_DATA Macro@@@#define NET_DATA 0x2 // App Debug Print Flows - DATA AppDebug Flow for the Logs - Data None...","GUID-D3EC049D-63E2-4FC1-8A1A-7A4323878851.html@@@1.3.3.14 SYS_NET_EVENT Enum@@@typedef enum { // NET Socket connected to Peer SYS_NET_EVNT_CONNECTED = 0 , // NET Socket disconnected SYS_NET_EVNT_DISCONNECTED, // Received Data on NET Socket connected to Peer...","GUID-D861E940-4256-413D-ACFD-88DD118AFA93.html@@@1.6.3.11 Registering call back function@@@bool ota_app_reg_cb ( void ) Registering OTA service callback function. This function can be used for easy registering of user callback function. It can be called from application layer. The...","GUID-DE91F328-40E1-48BE-9E5D-8638A49014A1.html@@@1.7.3.8 SYS_WSS_STATUS_CODE_LEN Macro@@@#define SYS_WSS_STATUS_CODE_LEN 2 The size of the status code to be returned in a closing handshake defined by the RFC 6455 None...","GUID-DF9EDA3A-3278-4F8C-9FF8-F392E49360DE.html@@@1.3.3.22 SYS_NET_Deinitialize Function@@@void SYS_NET_Deinitialize () Deinitialization of data structures of the NET service This function is used for freeing the allocated data structures for the NET service. SYS_NET_Deinitialize() None...","GUID-E13DC21B-3F94-455C-8DB3-48F8F7163844.html@@@1.6.1 OTA System Service Usage@@@The OTA System Service provides simple APIs to enable Over the Air system firmware image upgrade. While using the service, the application does not have to handle low level states of a TCP/IP...","GUID-E3DE3951-0B4D-44ED-8EDD-5DE48A3597FC.html@@@1.6.3.6 SYS_OTA_DATA Struct@@@typedef struct { /* service current state */ SYS_OTA_STATES state; /*to indicate ,update check with server is failed*/ bool update_check_failed; /*to mage states required for parsing JSON content */...","GUID-E459CCF2-499A-4FA1-8CD3-59A216415FD1.html@@@1.2.3.18 SYS_MQTT_Publish Function@@@int32_t SYS_MQTT_Publish (SYS_MODULE_OBJ obj, SYS_MQTT_PublishTopicCfg *psPubCfg, char *message, uint16_t message_len); Returns success/ failure for the publishing of message on a topic by the user...","GUID-E5040CD9-28E3-4862-8A70-81C548C31901.html@@@1.3.3.3 SYS_NET_DEFAULT_TLS_ENABLE Macro@@@#define SYS_NET_DEFAULT_TLS_ENABLE 0 // TLS Disabled by default Default Values for TLS - False None...","GUID-E8248C48-3802-4362-A1F6-80CD79C20956.html@@@1.3.3.5 SYS_NET_INTF_WIFI Macro@@@#define SYS_NET_INTF_WIFI 0 // Wifi Intf Value Net Socket Intf - Wifi None...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E9E4CB78-3ABF-44B7-BC07-9AD7EC142A9B.html@@@1.2.3.6 SYS_MQTT_STATUS Enum@@@typedef enum { // Idle SYS_MQTT_STATUS_IDLE = 0 , // Lower Layer is DOWN SYS_MQTT_STATUS_LOWER_LAYER_DOWN, // Net Client connecting to Net Server SYS_MQTT_STATUS_SOCK_CLIENT_CONNECTING, // Net...","GUID-EC779F2A-1DDD-4F5A-A648-47DE4498A25F.html@@@1.5.3 Wi-Fi Provisioning System Service Interface@@@Name Description SYS_WIFIPROV_AUTH Identifies the type of Authentication requested. SYS_WIFIPROV_CTRLMSG Identifies the control message for which the client has called SYS_WIFIPROV_MODE Identifies the...","GUID-F03C9E56-6E27-4686-A0CA-14D14F615FB5.html@@@1.6.3.1 SYS_OTA_STATES Enum@@@typedef enum { /* Service&apos;s state machine&apos;s initial state. */ SYS_OTA_REGWIFISRVCALLBCK = 0 , /* Wait for network connection */ SYS_OTA_WAITFOR_NETWORK_CONNECTION, /*Wait for OTA core to be idle*/...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F15AF9B8-740F-41C4-BFC2-850D793F858B.html@@@1.3 Net System Service@@@Net System Service Library provides an application programming interface (API) to manage TCPIP Networking functionalities. The Net System Service uses the NetPres APIs for achieving these...","GUID-F21D1BCE-BDCB-421D-B9E2-11B883C2AC54.html@@@1.1.3.5 APP_LOG_LVL_DISABLE Macro@@@#define APP_LOG_LVL_DISABLE 0x0 App Debug Service Logging Disabled None...","GUID-F3104485-0F0B-4CB8-B1F6-88C6F8873471.html@@@1.7.2 Web Socket System(WSS) Service Configuration@@@The WSS System Service library should be configured through MCC. When user adds the WSS System Service into a project, all the required dependencies and components are added automatically into the the...","GUID-F3CF23C1-1804-4A3D-AE91-4EDD8A565D37.html@@@1.4.3.15 SYS_WIFI_GetStatus Function@@@uint8_t SYS_WIFI_GetStatus ( SYS_MODULE_OBJ object) Returns Wi-Fi system service status. This function returns the current status of the System Wi-Fi service. This function help user to perform...","GUID-F457EE08-DC44-4FA8-952E-AE5EB673FF76.html@@@1.1.3.12 SYS_APPDEBUG_Deinitialize Function@@@int32_t SYS_APPDEBUG_Deinitialize () Returns success/ failure for deinitialization of data structures of the App Debug service This function is used for deinitializing the data structures of the App...","GUID-F46FB0B5-D797-4A03-A691-D212DA77C376.html@@@1.5.3.8 SYS_WIFIPROV_STA_CONFIG Struct@@@typedef struct { /* Wi-Fi station mode SSID */ uint8_t ssid[ 32 ]; /* Wi-Fi station mode passphrase */ uint8_t psk[ 64 ]; /* Wi-Fi station mode authentication type */ SYS_WIFIPROV_AUTH authType; /*...","GUID-F55CC6FB-EF86-4353-9A2F-C56DD3EA2ED2.html@@@1.3.3.29 SYS_NET_SendMsg Function@@@int32_t SYS_NET_SendMsg (SYS_MODULE_OBJ obj, uint8_t *buffer, uint16_t len) Returns No of Bytes sent to peer using the System NET instance. This function returns the number of bytes transmitted to the...","GUID-F7EB79E2-9930-436C-BE86-720D58FE0BFB.html@@@1.1.3.9 SYS_APPDEBUG_CONFIG Struct@@@typedef struct { /* Initial system Log level setting. */ unsigned int logLevel; /* Initial system Log level setting. */ unsigned int logFlow; /* Initial system Log level setting. */ const char...","GUID-F8A21576-2DFD-406F-9736-CEFDE7AD5207.html@@@1.6.3 OTA System Service Interface@@@Name Description SYS_OTA_CTRLMSG Identifies the control message for which the client has called the SYS_OTA_CtrlMsg() SYS_OTA_STATUS Provide status of OTA system SYS_OTA_RESULT Result of a OTA system...","GUID-F95A2A2E-4FBF-4063-B80C-BA6C7D66BE8A.html@@@MPLAB\u00AE Harmony License@@@IMPORTANT: READ CAREFULLY MICROCHIP IS WILLING TO LICENSE THIS INTEGRATED SOFTWARE FRAMEWORK SOFTWARE AND ACCOMPANYING DOCUMENTATION OFFERED TO YOU ONLY ON THE CONDITION THAT YOU ACCEPT ALL OF THE...","GUID-FEC8454E-5F93-4596-800E-8B8BCBC24032.html@@@1.1.3.7 SYS_APPDEBUG_CtrlMsgType Enum@@@typedef enum { SYS_APPDEBUG_CTRL_MSG_TYPE_SET_LEVEL, SYS_APPDEBUG_CTRL_MSG_TYPE_SET_FLOW, } SYS_APPDEBUG_CtrlMsgType; Identifies the control message for which the User has called the...","GUID-FF17C85E-72C4-4E0B-A7D5-A7B71C1DA84E.html@@@1.2.3.16 SYS_MQTT_Disconnect Function@@@void SYS_MQTT_Disconnect (SYS_MODULE_OBJ obj) Disconnects from the MQTT Server This function is used for disconnecting from the MQTT Server. SYS_MQTT_Connect should have been called. obj - SYS_MQTT...","GUID-FF900B9E-1306-498E-8261-D7FEFA8CC184.html@@@1.6.3.2 SYS_OTA_RESULT Enum@@@typedef enum { /* Operation completed with success */ SYS_OTA_SUCCESS = 0 , /* Operation Failed.*/ SYS_OTA_FAILURE, } SYS_OTA_RESULT; Result of a ota system service client interface operation. Result...","cshelp.html@@@Context Sensitive Help@@@..."];
});